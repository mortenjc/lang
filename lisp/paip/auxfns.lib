#0Y_ #0Y |CHARSET|::|UTF-8|
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|REQUIRES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|FILES|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*PAIP-FILES*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*PAIP-DIRECTORY*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*PAIP-SOURCE*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*PAIP-BINARY*|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|PAIP-PATHNAME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|NAME| |COMMON-LISP|::|&OPTIONAL|
    (|COMMON-LISP|::|TYPE| :|LISP|))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|COMPILE-ALL-PAIP-FILES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|COMPILE-PAIP-FILE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|LOAD-PAIP-FILE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|FILE|)))
(|COMMON-LISP|::|DEFMACRO| |COMMON-LISP-USER|::|ONCE-ONLY|
 (|COMMON-LISP-USER|::|VARIABLES| |COMMON-LISP|::|&REST|
  |COMMON-LISP-USER|::|BODY|)
 "Returns the code built by BODY.  If any of VARIABLES\n
  might have side effects, they are evaluated once and stored\n
  in temporary variables that are then passed to BODY."
 (|COMMON-LISP|::|ASSERT|
  (|COMMON-LISP|::|EVERY| #'|COMMON-LISP|::|SYMBOLP|
   |COMMON-LISP-USER|::|VARIABLES|))
 (|COMMON-LISP|::|LET| ((|COMMON-LISP-USER|::|TEMPS| |COMMON-LISP|::|NIL|))
  (|COMMON-LISP|::|DOTIMES|
   (|COMMON-LISP-USER|::|I|
    (|COMMON-LISP|::|LENGTH| |COMMON-LISP-USER|::|VARIABLES|))
   (|COMMON-LISP|::|PUSH| (|COMMON-LISP|::|GENSYM|)
    |COMMON-LISP-USER|::|TEMPS|))
  `(|COMMON-LISP|::|IF|
    (|COMMON-LISP|::|EVERY| #'|COMMON-LISP-USER|::|SIDE-EFFECT-FREE?|
     (|COMMON-LISP|::|LIST| . ,|COMMON-LISP-USER|::|VARIABLES|))
    (|COMMON-LISP|::|PROGN| . ,|COMMON-LISP-USER|::|BODY|)
    (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|LET|
     ,`(|COMMON-LISP|::|LIST|
        ,@(|COMMON-LISP|::|MAPCAR|
           #'(|COMMON-LISP|::|LAMBDA|
              (|COMMON-LISP-USER|::|TMP| |COMMON-LISP-USER|::|VAR|)
              `(|COMMON-LISP|::|LIST| ',|COMMON-LISP-USER|::|TMP|
                ,|COMMON-LISP-USER|::|VAR|))
           |COMMON-LISP-USER|::|TEMPS| |COMMON-LISP-USER|::|VARIABLES|))
     (|COMMON-LISP|::|LET|
      ,(|COMMON-LISP|::|MAPCAR|
        #'(|COMMON-LISP|::|LAMBDA|
           (|COMMON-LISP-USER|::|VAR| |COMMON-LISP-USER|::|TMP|)
           `(,|COMMON-LISP-USER|::|VAR| ',|COMMON-LISP-USER|::|TMP|))
        |COMMON-LISP-USER|::|VARIABLES| |COMMON-LISP-USER|::|TEMPS|)
      . ,|COMMON-LISP-USER|::|BODY|)))))
(|COMMON-LISP|::|DEFUN| |COMMON-LISP-USER|::|SIDE-EFFECT-FREE?|
 (|COMMON-LISP|::|EXP|)
 "Is exp a constant, variable, or function,\n
  or of the form (THE type x) where x is side-effect-free?"
 (|COMMON-LISP|::|OR| (|COMMON-LISP|::|ATOM| |COMMON-LISP|::|EXP|)
  (|COMMON-LISP|::|CONSTANTP| |COMMON-LISP|::|EXP|)
  (|COMMON-LISP-USER|::|STARTS-WITH| |COMMON-LISP|::|EXP|
   '|COMMON-LISP|::|FUNCTION|)
  (|COMMON-LISP|::|AND|
   (|COMMON-LISP-USER|::|STARTS-WITH| |COMMON-LISP|::|EXP|
    '|COMMON-LISP|::|THE|)
   (|COMMON-LISP-USER|::|SIDE-EFFECT-FREE?|
    (|COMMON-LISP|::|THIRD| |COMMON-LISP|::|EXP|)))))
(|COMMON-LISP|::|DEFMACRO| |COMMON-LISP-USER|::|FUNCALL-IF|
 (|COMMON-LISP-USER|::|FN| |COMMON-LISP-USER|::|ARG|)
 (|COMMON-LISP-USER|::|ONCE-ONLY| (|COMMON-LISP-USER|::|FN|)
  `(|COMMON-LISP|::|IF| ,|COMMON-LISP-USER|::|FN|
    (|COMMON-LISP|::|FUNCALL| ,|COMMON-LISP-USER|::|FN|
     ,|COMMON-LISP-USER|::|ARG|)
    ,|COMMON-LISP-USER|::|ARG|)))
(|COMMON-LISP|::|DEFMACRO| |COMMON-LISP-USER|::|READ-TIME-CASE|
 (|COMMON-LISP-USER|::|FIRST-CASE| |COMMON-LISP|::|&REST|
  |COMMON-LISP-USER|::|OTHER-CASES|)
 "Do the first case, where normally cases are\n
  specified with #+ or possibly #- marks."
 (|COMMON-LISP|::|DECLARE|
  (|COMMON-LISP|::|IGNORE| |COMMON-LISP-USER|::|OTHER-CASES|))
 |COMMON-LISP-USER|::|FIRST-CASE|)
(|COMMON-LISP|::|DEFUN| |COMMON-LISP-USER|::|REST2| (|COMMON-LISP-USER|::|X|)
 "The rest of a list after the first TWO elements."
 (|COMMON-LISP|::|REST| (|COMMON-LISP|::|REST| |COMMON-LISP-USER|::|X|)))
(|COMMON-LISP|::|DEFUN| |COMMON-LISP-USER|::|FIND-ANYWHERE|
 (|COMMON-LISP-USER|::|ITEM| |COMMON-LISP-USER|::|TREE|)
 "Does item occur anywhere in tree?"
 (|COMMON-LISP|::|IF| (|COMMON-LISP|::|ATOM| |COMMON-LISP-USER|::|TREE|)
  (|COMMON-LISP|::|IF|
   (|COMMON-LISP|::|EQL| |COMMON-LISP-USER|::|ITEM| |COMMON-LISP-USER|::|TREE|)
   |COMMON-LISP-USER|::|TREE|)
  (|COMMON-LISP|::|OR|
   (|COMMON-LISP-USER|::|FIND-ANYWHERE| |COMMON-LISP-USER|::|ITEM|
    (|COMMON-LISP|::|FIRST| |COMMON-LISP-USER|::|TREE|))
   (|COMMON-LISP-USER|::|FIND-ANYWHERE| |COMMON-LISP-USER|::|ITEM|
    (|COMMON-LISP|::|REST| |COMMON-LISP-USER|::|TREE|)))))
(|COMMON-LISP|::|DEFUN| |COMMON-LISP-USER|::|STARTS-WITH|
 (|COMMON-LISP|::|LIST| |COMMON-LISP-USER|::|X|)
 "Is x a list whose first element is x?"
 (|COMMON-LISP|::|AND| (|COMMON-LISP|::|CONSP| |COMMON-LISP|::|LIST|)
  (|COMMON-LISP|::|EQL| (|COMMON-LISP|::|FIRST| |COMMON-LISP|::|LIST|)
   |COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|ONCE-ONLY|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|ONCE-ONLY|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|ONCE-ONLY|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Returns the code built by BODY.  If any of VARIABLES\n
  might have side effects, they are evaluated once and stored\n
  in temporary variables that are then passed to BODY."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|VARIABLES|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|ONCE-ONLY|
       (|COMMON-LISP|::|ASSERT|
        (|COMMON-LISP|::|EVERY| #'|COMMON-LISP|::|SYMBOLP|
         |COMMON-LISP-USER|::|VARIABLES|))
       (|COMMON-LISP|::|LET|
        ((|COMMON-LISP-USER|::|TEMPS| |COMMON-LISP|::|NIL|))
        (|COMMON-LISP|::|DOTIMES|
         (|COMMON-LISP-USER|::|I|
          (|COMMON-LISP|::|LENGTH| |COMMON-LISP-USER|::|VARIABLES|))
         (|COMMON-LISP|::|PUSH| (|COMMON-LISP|::|GENSYM|)
          |COMMON-LISP-USER|::|TEMPS|))
        `(|COMMON-LISP|::|IF|
          (|COMMON-LISP|::|EVERY| #'|COMMON-LISP-USER|::|SIDE-EFFECT-FREE?|
           (|COMMON-LISP|::|LIST| . ,|COMMON-LISP-USER|::|VARIABLES|))
          (|COMMON-LISP|::|PROGN| . ,|COMMON-LISP-USER|::|BODY|)
          (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|LET|
           ,`(|COMMON-LISP|::|LIST|
              ,@(|COMMON-LISP|::|MAPCAR|
                 #'(|COMMON-LISP|::|LAMBDA|
                    (|COMMON-LISP-USER|::|TMP| |COMMON-LISP-USER|::|VAR|)
                    `(|COMMON-LISP|::|LIST| ',|COMMON-LISP-USER|::|TMP|
                      ,|COMMON-LISP-USER|::|VAR|))
                 |COMMON-LISP-USER|::|TEMPS| |COMMON-LISP-USER|::|VARIABLES|))
           (|COMMON-LISP|::|LET|
            ,(|COMMON-LISP|::|MAPCAR|
              #'(|COMMON-LISP|::|LAMBDA|
                 (|COMMON-LISP-USER|::|VAR| |COMMON-LISP-USER|::|TMP|)
                 `(,|COMMON-LISP-USER|::|VAR| ',|COMMON-LISP-USER|::|TMP|))
              |COMMON-LISP-USER|::|VARIABLES| |COMMON-LISP-USER|::|TEMPS|)
            . ,|COMMON-LISP-USER|::|BODY|)))))))))
  '(|COMMON-LISP-USER|::|VARIABLES| |COMMON-LISP|::|&REST|
    |COMMON-LISP-USER|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SIDE-EFFECT-FREE?|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|EXP|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|FUNCALL-IF|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|FUNCALL-IF|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|FUNCALL-IF|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|FN|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|FUNCALL-IF|
       (|COMMON-LISP-USER|::|ONCE-ONLY| (|COMMON-LISP-USER|::|FN|)
        `(|COMMON-LISP|::|IF| ,|COMMON-LISP-USER|::|FN|
          (|COMMON-LISP|::|FUNCALL| ,|COMMON-LISP-USER|::|FN|
           ,|COMMON-LISP-USER|::|ARG|)
          ,|COMMON-LISP-USER|::|ARG|)))))))
  '(|COMMON-LISP-USER|::|FN| |COMMON-LISP-USER|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|READ-TIME-CASE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|READ-TIME-CASE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|READ-TIME-CASE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Do the first case, where normally cases are\n
  specified with #+ or possibly #- marks."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|FIRST-CASE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|OTHER-CASES| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|DECLARE|
       (|COMMON-LISP|::|IGNORE| |COMMON-LISP-USER|::|OTHER-CASES|))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|READ-TIME-CASE|
       |COMMON-LISP-USER|::|FIRST-CASE|)))))
  '(|COMMON-LISP-USER|::|FIRST-CASE| |COMMON-LISP|::|&REST|
    |COMMON-LISP-USER|::|OTHER-CASES|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|REST2|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|FIND-ANYWHERE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|ITEM| |COMMON-LISP-USER|::|TREE|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|STARTS-WITH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|LIST| |COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|FIND-ALL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|ITEM| |COMMON-LISP|::|SEQUENCE| |COMMON-LISP|::|&REST|
    |COMMON-LISP-USER|::|KEYWORD-ARGS| |COMMON-LISP|::|&KEY|
    (|COMMON-LISP-USER|::|TEST| #'|COMMON-LISP|::|EQL|)
    |COMMON-LISP-USER|::|TEST-NOT| |COMMON-LISP|::|&ALLOW-OTHER-KEYS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|PARTITION-IF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|PRED| |COMMON-LISP|::|LIST|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MAYBE-ADD|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|OP| |COMMON-LISP-USER|::|EXPS|
    |COMMON-LISP|::|&OPTIONAL| |COMMON-LISP-USER|::|IF-NIL|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SEQ-REF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|SEQ| |COMMON-LISP-USER|::|INDEX|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MAYBE-SET-FILL-POINTER|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|ARRAY| |COMMON-LISP-USER|::|NEW-LENGTH|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|SYMBOL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|NEW-SYMBOL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|LAST1|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|LIST|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MAPPEND|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|FN| |COMMON-LISP|::|LIST|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MKLIST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|FLATTEN|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|EXP|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|RANDOM-ELT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|SEQ|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MEMBER-EQUAL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|ITEM| |COMMON-LISP|::|LIST|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|COMPOSE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|FUNCTIONS|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*DBG-IDS*|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|DBG|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|ID| |COMMON-LISP-USER|::|FORMAT-STRING|
    |COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|DEBUG|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|IDS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|UNDEBUG|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|IDS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|DBG-INDENT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|ID| |COMMON-LISP-USER|::|INDENT|
    |COMMON-LISP-USER|::|FORMAT-STRING| |COMMON-LISP|::|&REST|
    |COMMON-LISP-USER|::|ARGS|)))
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|COMMON-LISP-USER|::|FAIL|
 '|COMMON-LISP|::|NIL|)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|COMMON-LISP-USER|::|NO-BINDINGS|
 ''((|COMMON-LISP|::|T| . |COMMON-LISP|::|T|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|PAT-MATCH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|PATTERN| |COMMON-LISP-USER|::|INPUT|
    |COMMON-LISP|::|&OPTIONAL|
    (|COMMON-LISP-USER|::|BINDINGS| |COMMON-LISP-USER|::|NO-BINDINGS|))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MATCH-VARIABLE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|VAR| |COMMON-LISP-USER|::|INPUT|
    |COMMON-LISP-USER|::|BINDINGS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MAKE-BINDING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|VAR| |COMMON-LISP-USER|::|VAL|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|BINDING-VAR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|BINDING|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|BINDING-VAL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|BINDING|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|GET-BINDING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|VAR| |COMMON-LISP-USER|::|BINDINGS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|LOOKUP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|VAR| |COMMON-LISP-USER|::|BINDINGS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|EXTEND-BINDINGS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|VAR| |COMMON-LISP-USER|::|VAL|
    |COMMON-LISP-USER|::|BINDINGS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|VARIABLE-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|DEFUN-MEMO|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|DEFUN-MEMO|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|DEFUN-MEMO|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Define a memoized function."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|FN|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|ARGS| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|BODY| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|DEFUN-MEMO|
       `(|COMMON-LISP-USER|::|MEMOIZE|
         (|COMMON-LISP|::|DEFUN| ,|COMMON-LISP-USER|::|FN|
          ,|COMMON-LISP-USER|::|ARGS| . ,|COMMON-LISP-USER|::|BODY|)))))))
  '(|COMMON-LISP-USER|::|FN| |COMMON-LISP-USER|::|ARGS| |COMMON-LISP|::|&BODY|
    |COMMON-LISP-USER|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MEMO|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|FN| |COMMON-LISP|::|&KEY|
    (|COMMON-LISP-USER|::|KEY| #'|COMMON-LISP|::|FIRST|)
    (|COMMON-LISP-USER|::|TEST| #'|COMMON-LISP|::|EQL|)
    |COMMON-LISP-USER|::|NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MEMOIZE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|FN-NAME| |COMMON-LISP|::|&KEY|
    (|COMMON-LISP-USER|::|KEY| #'|COMMON-LISP|::|FIRST|)
    (|COMMON-LISP-USER|::|TEST| #'|COMMON-LISP|::|EQL|))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CLEAR-MEMOIZE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|FN-NAME|)))
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|COMMON-LISP|::|LET|
  ((#1=#:|G3352|
    (|COMMON-LISP|::|CONS| '|COMMON-LISP-USER|::|DELAY|
     (|CLOS|::|CLASS-NAMES|
      (|COMMON-LISP|::|GET| '|COMMON-LISP|::|STRUCTURE-OBJECT|
       '|CLOS|::|CLOSCLASS|)))))
  (|SYSTEM|::|STRUCTURE-UNDEFINE-ACCESSORIES| '|COMMON-LISP-USER|::|DELAY|)
  (|COMMON-LISP|::|REMPROP| '|COMMON-LISP-USER|::|DELAY|
   '|SYSTEM|::|DEFSTRUCT-DESCRIPTION|)
  (|CLOS|::|DEFINE-STRUCTURE-CLASS| '|COMMON-LISP-USER|::|DELAY| #1#
   '|COMMON-LISP-USER|::|MAKE-DELAY| '|COMMON-LISP|::|NIL|
   '|COMMON-LISP-USER|::|COPY-DELAY| '|COMMON-LISP-USER|::|DELAY-P|
   (|COMMON-LISP|::|LIST|
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
     '|COMMON-LISP-USER|::|VALUE| :|INITARGS| '#2=(:|VALUE|) :|TYPE|
     '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #3='|CLOS|::|INHERITABLE-INITER|
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #4=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #5='|CLOS|::|INHERITABLE-DOC| '(|COMMON-LISP|::|NIL|)
     #6='|CLOS|::|LOCATION| '1. #7='|CLOS|::|READONLY| '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
     '|COMMON-LISP-USER|::|COMPUTED?| :|INITARGS| '#8=(:|COMPUTED?|) :|TYPE|
     '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #3#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #9=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #5# '(|COMMON-LISP|::|NIL|) #6# '2. #7# '|COMMON-LISP|::|NIL|))
   (|COMMON-LISP|::|LIST|
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
     '|COMMON-LISP-USER|::|VALUE| :|INITARGS| '#2# :|TYPE| '|COMMON-LISP|::|T|
     :|ALLOCATION| ':|INSTANCE| #10='|CLOS|::|INHERITABLE-INITER|
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #4#)
     #11='|CLOS|::|INHERITABLE-DOC| '(|COMMON-LISP|::|NIL|) :|READERS|
     '(|COMMON-LISP-USER|::|DELAY-VALUE|) :|WRITERS|
     '((|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|DELAY-VALUE|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
     '|COMMON-LISP-USER|::|COMPUTED?| :|INITARGS| '#8# :|TYPE|
     '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #10#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #9#)
     #11# '(|COMMON-LISP|::|NIL|) :|READERS|
     '(|COMMON-LISP-USER|::|DELAY-COMPUTED?|) :|WRITERS|
     '((|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|DELAY-COMPUTED?|)))))
  (|COMMON-LISP|::|DEFUN| |COMMON-LISP-USER|::|MAKE-DELAY|
   (|COMMON-LISP|::|&KEY| (#12=#:|VALUE| |COMMON-LISP|::|NIL|)
    (#13=#:|COMPUTED?| |COMMON-LISP|::|NIL|))
   (|COMMON-LISP|::|LET|
    ((|SYSTEM|::|OBJECT| (|SYSTEM|::|%MAKE-STRUCTURE| #1# 3.)))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP-USER|::|DELAY|
      |SYSTEM|::|OBJECT| 1.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #12#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP-USER|::|DELAY|
      |SYSTEM|::|OBJECT| 2.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #13#))
    |SYSTEM|::|OBJECT|)))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|DELAY-P|))
 (|COMMON-LISP|::|DEFUN| |COMMON-LISP-USER|::|DELAY-P| (|SYSTEM|::|OBJECT|)
  (|SYSTEM|::|%STRUCTURE-TYPE-P| '|COMMON-LISP-USER|::|DELAY|
   |SYSTEM|::|OBJECT|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|COPY-DELAY|))
 (|COMMON-LISP|::|DEFUN| |COMMON-LISP-USER|::|COPY-DELAY|
  (|COMMON-LISP|::|STRUCTURE|)
  (|COMMON-LISP|::|COPY-STRUCTURE| |COMMON-LISP|::|STRUCTURE|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|DELAY-VALUE|
    (|COMMON-LISP-USER|::|DELAY|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|DELAY-VALUE|))
 (|COMMON-LISP|::|DEFUN| |COMMON-LISP-USER|::|DELAY-VALUE|
  #14=(|SYSTEM|::|OBJECT|)
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP-USER|::|DELAY| |SYSTEM|::|OBJECT|
    1.)))
 (|SYSTEM|::|%PUT| '|COMMON-LISP-USER|::|DELAY-VALUE|
  #15='|SYSTEM|::|DEFSTRUCT-READER| '|COMMON-LISP-USER|::|DELAY|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|DELAY-COMPUTED?|
    (|COMMON-LISP-USER|::|DELAY|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|DELAY-COMPUTED?|))
 (|COMMON-LISP|::|DEFUN| |COMMON-LISP-USER|::|DELAY-COMPUTED?| #14#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP-USER|::|DELAY| |SYSTEM|::|OBJECT|
    2.)))
 (|SYSTEM|::|%PUT| '|COMMON-LISP-USER|::|DELAY-COMPUTED?| #15#
  '|COMMON-LISP-USER|::|DELAY|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|DELAY-VALUE|)
    (|COMMON-LISP|::|T| |COMMON-LISP-USER|::|DELAY|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|DELAY-VALUE|)))
 (|COMMON-LISP|::|DEFUN|
  (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|DELAY-VALUE|)
  #16=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
  (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP-USER|::|DELAY| |SYSTEM|::|OBJECT|
   1. |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|COMMON-LISP-USER|::|DELAY-VALUE|
  #17='|SYSTEM|::|DEFSTRUCT-WRITER| '|COMMON-LISP-USER|::|DELAY|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|DELAY-COMPUTED?|)
    (|COMMON-LISP|::|T| |COMMON-LISP-USER|::|DELAY|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|DELAY-COMPUTED?|)))
 (|COMMON-LISP|::|DEFUN|
  (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|DELAY-COMPUTED?|) #16#
  (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP-USER|::|DELAY| |SYSTEM|::|OBJECT|
   2. |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|COMMON-LISP-USER|::|DELAY-COMPUTED?| #17#
  '|COMMON-LISP-USER|::|DELAY|)
 (|SYSTEM|::|%SET-DOCUMENTATION| '|COMMON-LISP-USER|::|DELAY|
  '|COMMON-LISP|::|TYPE| |COMMON-LISP|::|NIL|)
 (|CLOS|::|DEFSTRUCT-REMOVE-PRINT-OBJECT-METHOD| '|COMMON-LISP-USER|::|DELAY|)
 '|COMMON-LISP-USER|::|DELAY|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MAKE-DELAY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&KEY| (#:|VALUE| |COMMON-LISP|::|NIL|)
    (#:|COMPUTED?| |COMMON-LISP|::|NIL|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|DELAY-P|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|DELAY-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |COMMON-LISP-USER|::|DELAY-P|))
   (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|DELAY-P|
    (|SYSTEM|::|%STRUCTURE-TYPE-P| '|COMMON-LISP-USER|::|DELAY|
     |SYSTEM|::|OBJECT|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|COPY-DELAY|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|COPY-DELAY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|COMMON-LISP|::|STRUCTURE|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |COMMON-LISP-USER|::|COPY-DELAY|))
   (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|COPY-DELAY|
    (|COMMON-LISP|::|COPY-STRUCTURE| |COMMON-LISP|::|STRUCTURE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|DELAY-VALUE|
   (|COMMON-LISP-USER|::|DELAY|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|DELAY-VALUE|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|DELAY-VALUE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |COMMON-LISP-USER|::|DELAY-VALUE|))
   (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|DELAY-VALUE|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP-USER|::|DELAY|
      |SYSTEM|::|OBJECT| 1.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|DELAY-COMPUTED?|
   (|COMMON-LISP-USER|::|DELAY|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|DELAY-COMPUTED?|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|DELAY-COMPUTED?|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |COMMON-LISP-USER|::|DELAY-COMPUTED?|))
   (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|DELAY-COMPUTED?|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP-USER|::|DELAY|
      |SYSTEM|::|OBJECT| 2.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|DELAY-VALUE|)
   (|COMMON-LISP|::|T| |COMMON-LISP-USER|::|DELAY|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|DELAY-VALUE|)))
(|SYSTEM|::|C-DEFUN|
 '#1=(|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|DELAY-VALUE|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|DELAY-VALUE|
    (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP-USER|::|DELAY|
     |SYSTEM|::|OBJECT| 1. |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|DELAY-COMPUTED?|)
   (|COMMON-LISP|::|T| |COMMON-LISP-USER|::|DELAY|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|DELAY-COMPUTED?|)))
(|SYSTEM|::|C-DEFUN|
 '#1=(|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|DELAY-COMPUTED?|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|DELAY-COMPUTED?|
    (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP-USER|::|DELAY|
     |SYSTEM|::|OBJECT| 2. |SYSTEM|::|VALUE|))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|DELAY|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|DELAY|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|DELAY|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "A computation that can be executed later by FORCE."
    (|COMMON-LISP|::|LET*|
     ((|COMMON-LISP-USER|::|BODY|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|DELAY|
      `(|COMMON-LISP-USER|::|MAKE-DELAY| :|VALUE|
        #'(|COMMON-LISP|::|LAMBDA| |COMMON-LISP|::|NIL| .
           ,|COMMON-LISP-USER|::|BODY|))))))
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|FORCE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|DELAY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|DEFRESOURCE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|DEFRESOURCE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|DEFRESOURCE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (#2=#:|G3415| (|COMMON-LISP|::|CDDR| . #1#))
       (|COMMON-LISP-USER|::|CONSTRUCTOR|
        (|COMMON-LISP|::|GETF| #2# ':|CONSTRUCTOR| |COMMON-LISP|::|NIL|))
       (|COMMON-LISP-USER|::|INITIAL-COPIES|
        (|COMMON-LISP|::|LET|
         ((#3=#:|KWD-ARG-3416|
           (|COMMON-LISP|::|GETF| #2# ':|INITIAL-COPIES|
            '#4=(|COMMON-LISP|::|NIL|))))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #3# '#4#)
          (|COMMON-LISP|::|PROGN| 0.) #3#)))
       (|COMMON-LISP-USER|::|SIZE|
        (|COMMON-LISP|::|LET|
         ((#5=#:|KWD-ARG-3417| (|COMMON-LISP|::|GETF| #2# ':|SIZE| '#4#)))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #5# '#4#)
          (|COMMON-LISP|::|PROGN|
           #6=(|COMMON-LISP|::|MAX| |COMMON-LISP-USER|::|INITIAL-COPIES| 10.))
          #5#))))
      (|SYSTEM|::|KEYWORD-TEST| #2#
       '(:|SIZE| :|INITIAL-COPIES| :|CONSTRUCTOR|))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|DEFRESOURCE|
       (|COMMON-LISP|::|LET|
        ((|COMMON-LISP-USER|::|RESOURCE|
          (|COMMON-LISP|::|SYMBOL| '|COMMON-LISP|::|*|
           (|COMMON-LISP|::|SYMBOL| |COMMON-LISP-USER|::|NAME|
            '|COMMON-LISP-USER|::|-RESOURCE*|)))
         (|COMMON-LISP-USER|::|DEALLOCATE|
          (|COMMON-LISP|::|SYMBOL| '|COMMON-LISP-USER|::|DEALLOCATE-|
           |COMMON-LISP-USER|::|NAME|))
         (|COMMON-LISP-USER|::|ALLOCATE|
          (|COMMON-LISP|::|SYMBOL| '|COMMON-LISP-USER|::|ALLOCATE-|
           |COMMON-LISP-USER|::|NAME|)))
        `(|COMMON-LISP|::|PROGN|
          (|COMMON-LISP|::|DEFPARAMETER| ,|COMMON-LISP-USER|::|RESOURCE|
           (|COMMON-LISP|::|MAKE-ARRAY| ,|COMMON-LISP-USER|::|SIZE|
            :|FILL-POINTER| 0.))
          (|COMMON-LISP|::|DEFUN| ,|COMMON-LISP-USER|::|ALLOCATE|
           |COMMON-LISP|::|NIL|
           "Get an element from the resource pool, or make one."
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|=|
             (|COMMON-LISP|::|FILL-POINTER| ,|COMMON-LISP-USER|::|RESOURCE|)
             0.)
            ,|COMMON-LISP-USER|::|CONSTRUCTOR|
            (|COMMON-LISP|::|VECTOR-POP| ,|COMMON-LISP-USER|::|RESOURCE|)))
          (|COMMON-LISP|::|DEFUN| ,|COMMON-LISP-USER|::|DEALLOCATE|
           (,|COMMON-LISP-USER|::|NAME|)
           "Place a no-longer-needed element back in the pool."
           (|COMMON-LISP|::|VECTOR-PUSH-EXTEND| ,|COMMON-LISP-USER|::|NAME|
            ,|COMMON-LISP-USER|::|RESOURCE|))
          ,(|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|>| |COMMON-LISP-USER|::|INITIAL-COPIES| 0.)
            `(|COMMON-LISP|::|MAPC| #',|COMMON-LISP-USER|::|DEALLOCATE|
              (|COMMON-LISP|::|LOOP| |COMMON-LISP-USER|::|REPEAT|
               ,|COMMON-LISP-USER|::|INITIAL-COPIES|
               |COMMON-LISP-USER|::|COLLECT|
               (,|COMMON-LISP-USER|::|ALLOCATE|))))
          ',|COMMON-LISP-USER|::|NAME|)))))))
  '(|COMMON-LISP-USER|::|NAME| |COMMON-LISP|::|&KEY|
    |COMMON-LISP-USER|::|CONSTRUCTOR| (|COMMON-LISP-USER|::|INITIAL-COPIES| 0.)
    (|COMMON-LISP-USER|::|SIZE| #6#))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|WITH-RESOURCE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|WITH-RESOURCE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|WITH-RESOURCE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Execute body with VAR bound to an instance of RESOURCE."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G3435| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G3436|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| #1# 2. 3. |COMMON-LISP|::|NIL|))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|COMMON-LISP-USER|::|WITH-RESOURCE| #1#
          '#4=(|COMMON-LISP-USER|::|VAR| |COMMON-LISP-USER|::|RESOURCE|
               |COMMON-LISP|::|&OPTIONAL| |COMMON-LISP-USER|::|PROTECT|))
         #1#))
       (|COMMON-LISP-USER|::|VAR| (|COMMON-LISP|::|CAR| #3#))
       (|COMMON-LISP-USER|::|RESOURCE| (|COMMON-LISP|::|CADR| . #5=(#3#)))
       (|COMMON-LISP-USER|::|PROTECT| (|COMMON-LISP|::|CADDR| . #5#))
       (|COMMON-LISP-USER|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|WITH-RESOURCE|
       (|COMMON-LISP|::|LET|
        ((|COMMON-LISP-USER|::|ALLOCATE|
          (|COMMON-LISP|::|SYMBOL| '|COMMON-LISP-USER|::|ALLOCATE-|
           |COMMON-LISP-USER|::|RESOURCE|))
         (|COMMON-LISP-USER|::|DEALLOCATE|
          (|COMMON-LISP|::|SYMBOL| '|COMMON-LISP-USER|::|DEALLOCATE-|
           |COMMON-LISP-USER|::|RESOURCE|)))
        (|COMMON-LISP|::|IF| |COMMON-LISP-USER|::|PROTECT|
         `(|COMMON-LISP|::|LET|
           ((,|COMMON-LISP-USER|::|VAR| |COMMON-LISP|::|NIL|))
           (|COMMON-LISP|::|UNWIND-PROTECT|
            (|COMMON-LISP|::|PROGN|
             (|COMMON-LISP|::|SETF| ,|COMMON-LISP-USER|::|VAR|
              (,|COMMON-LISP-USER|::|ALLOCATE|))
             ,@|COMMON-LISP-USER|::|BODY|)
            (|COMMON-LISP|::|UNLESS|
             (|COMMON-LISP|::|NULL| ,|COMMON-LISP-USER|::|VAR|)
             (,|COMMON-LISP-USER|::|DEALLOCATE| ,|COMMON-LISP-USER|::|VAR|))))
         `(|COMMON-LISP|::|LET|
           ((,|COMMON-LISP-USER|::|VAR| (,|COMMON-LISP-USER|::|ALLOCATE|)))
           ,@|COMMON-LISP-USER|::|BODY|
           (,|COMMON-LISP-USER|::|DEALLOCATE|
            |COMMON-LISP-USER|::|VAR|)))))))))
  '(#4# |COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|QUEUE-CONTENTS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|Q|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MAKE-QUEUE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|ENQUEUE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|ITEM| |COMMON-LISP-USER|::|Q|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|DEQUEUE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|Q|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|FRONT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|Q|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|EMPTY-QUEUE-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|Q|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|QUEUE-NCONC|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|Q| |COMMON-LISP|::|LIST|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SORT*|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|SEQ| |COMMON-LISP-USER|::|PRED| |COMMON-LISP|::|&KEY|
    |COMMON-LISP-USER|::|KEY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|REUSE-CONS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|X| |COMMON-LISP-USER|::|Y|
    |COMMON-LISP-USER|::|X-Y|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|LENGTH=1|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|REST3|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|LIST|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|UNIQUE-FIND-IF-ANYWHERE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|PREDICATE| |COMMON-LISP-USER|::|TREE|
    |COMMON-LISP|::|&OPTIONAL| |COMMON-LISP-USER|::|FOUND-SO-FAR|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|FIND-IF-ANYWHERE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|PREDICATE| |COMMON-LISP-USER|::|TREE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|COMMON-LISP-USER|::|DEFINE-ENUMERATED-TYPE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|DEFINE-ENUMERATED-TYPE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|DEFINE-ENUMERATED-TYPE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Represent an enumerated type with integers 0-n."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|ELEMENTS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|DEFINE-ENUMERATED-TYPE|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|DEFTYPE| ,|COMMON-LISP|::|TYPE| |COMMON-LISP|::|NIL|
          '(|COMMON-LISP|::|INTEGER| 0.
            ,(|COMMON-LISP|::|-|
              (|COMMON-LISP|::|LENGTH| |COMMON-LISP-USER|::|ELEMENTS|) 1.)))
         (|COMMON-LISP|::|DEFUN|
          ,(|COMMON-LISP|::|SYMBOL| |COMMON-LISP|::|TYPE|
            '|COMMON-LISP-USER|::|->SYMBOL|)
          (,|COMMON-LISP|::|TYPE|)
          (|COMMON-LISP|::|ELT| ',|COMMON-LISP-USER|::|ELEMENTS|
           ,|COMMON-LISP|::|TYPE|))
         (|COMMON-LISP|::|DEFUN|
          ,(|COMMON-LISP|::|SYMBOL| '|COMMON-LISP-USER|::|SYMBOL->|
            |COMMON-LISP|::|TYPE|)
          (|COMMON-LISP|::|SYMBOL|)
          (|COMMON-LISP|::|POSITION| |COMMON-LISP|::|SYMBOL|
           ',|COMMON-LISP-USER|::|ELEMENTS|))
         ,@(|COMMON-LISP|::|LOOP| |COMMON-LISP-USER|::|FOR|
            |COMMON-LISP-USER|::|ELEMENT| |COMMON-LISP-USER|::|IN|
            |COMMON-LISP-USER|::|ELEMENTS| |COMMON-LISP-USER|::|FOR|
            |COMMON-LISP-USER|::|I| |COMMON-LISP-USER|::|FROM| 0.
            |COMMON-LISP-USER|::|COLLECT|
            `(|COMMON-LISP|::|DEFCONSTANT| ,|COMMON-LISP-USER|::|ELEMENT|
              ,|COMMON-LISP-USER|::|I|))))))))
  '(|COMMON-LISP|::|TYPE| |COMMON-LISP|::|&REST|
    |COMMON-LISP-USER|::|ELEMENTS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|NOT-NULL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|FIRST-OR-NIL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|FIRST-OR-SELF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|%PUTD| '|CLOS|::|DEFMETHOD|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLOS|::|DEFMETHOD|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|ARGS| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|BODY| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLOS|::|DEFMETHOD|
       `(|COMMON-LISP|::|DEFUN| ',|COMMON-LISP-USER|::|NAME|
         ',|COMMON-LISP-USER|::|ARGS| ,@|COMMON-LISP-USER|::|BODY|))))))
  '(|COMMON-LISP-USER|::|NAME| |COMMON-LISP-USER|::|ARGS|
    |COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|MAP-INTO|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|RESULT-SEQUENCE| |COMMON-LISP|::|FUNCTION|
    |COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|SEQUENCES|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|COMPLEMENT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|FN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|WITH-COMPILATION-UNIT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|WITH-COMPILATION-UNIT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|WITH-COMPILATION-UNIT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Do the body, but delay compiler warnings until the end."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OPTIONS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|DECLARE|
       (|COMMON-LISP|::|IGNORE| |COMMON-LISP-USER|::|OPTIONS|))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|WITH-COMPILATION-UNIT|
       `(,(|COMMON-LISP-USER|::|READ-TIME-CASE| '|COMMON-LISP|::|PROGN|) .
         ,|COMMON-LISP-USER|::|BODY|))))))
  '(|COMMON-LISP-USER|::|OPTIONS| |COMMON-LISP|::|&BODY|
    |COMMON-LISP-USER|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|REDUCE*|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|FN| |COMMON-LISP-USER|::|SEQ|
    |COMMON-LISP-USER|::|FROM-END| |COMMON-LISP-USER|::|START|
    |COMMON-LISP-USER|::|END| |COMMON-LISP-USER|::|KEY|
    |COMMON-LISP-USER|::|INIT| |COMMON-LISP-USER|::|INIT-P|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|REDUCE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|SEQUENCE| |COMMON-LISP|::|&KEY|
    |COMMON-LISP-USER|::|FROM-END| |COMMON-LISP-USER|::|START|
    |COMMON-LISP-USER|::|END| |COMMON-LISP-USER|::|KEY|
    (|COMMON-LISP-USER|::|INITIAL-VALUE| |COMMON-LISP|::|NIL|
     |COMMON-LISP-USER|::|INITIAL-VALUE-P|))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|REDUCE-VECT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|FN| |COMMON-LISP-USER|::|SEQ|
    |COMMON-LISP-USER|::|FROM-END| |COMMON-LISP-USER|::|START|
    |COMMON-LISP-USER|::|END| |COMMON-LISP-USER|::|KEY|
    |COMMON-LISP-USER|::|INIT| |COMMON-LISP-USER|::|INIT-P|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|REDUCE-LIST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|FN| |COMMON-LISP-USER|::|SEQ|
    |COMMON-LISP-USER|::|FROM-END| |COMMON-LISP-USER|::|START|
    |COMMON-LISP-USER|::|END| |COMMON-LISP-USER|::|KEY|
    |COMMON-LISP-USER|::|INIT| |COMMON-LISP-USER|::|INIT-P|)))
