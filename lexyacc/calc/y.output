Grammar

    0 $accept: program $end

    1 program: program statement '\n'
    2        | /* empty */

    3 statement: expr
    4          | VARIABLE '=' expr

    5 expr: INTEGER
    6     | FLOAT
    7     | VARIABLE
    8     | expr '+' expr
    9     | expr '-' expr
   10     | expr '*' expr
   11     | expr '/' expr
   12     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1
'(' (40) 12
')' (41) 12
'*' (42) 10
'+' (43) 8
'-' (45) 9
'/' (47) 11
'=' (61) 4
error (256)
INTEGER (258) 5
FLOAT (259) 6
VARIABLE (260) 4 7


Nonterminals, with rules where they appear

$accept (14)
    on left: 0
program (15)
    on left: 1 2, on right: 0 1
statement (16)
    on left: 3 4, on right: 1
expr (17)
    on left: 5 6 7 8 9 10 11 12, on right: 3 4 8 9 10 11 12


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    1 program: program . statement '\n'

    $end      shift, and go to state 2
    INTEGER   shift, and go to state 3
    FLOAT     shift, and go to state 4
    VARIABLE  shift, and go to state 5
    '('       shift, and go to state 6

    statement  go to state 7
    expr       go to state 8


state 2

    0 $accept: program $end .

    $default  accept


state 3

    5 expr: INTEGER .

    $default  reduce using rule 5 (expr)


state 4

    6 expr: FLOAT .

    $default  reduce using rule 6 (expr)


state 5

    4 statement: VARIABLE . '=' expr
    7 expr: VARIABLE .

    '='  shift, and go to state 9

    $default  reduce using rule 7 (expr)


state 6

   12 expr: '(' . expr ')'

    INTEGER   shift, and go to state 3
    FLOAT     shift, and go to state 4
    VARIABLE  shift, and go to state 10
    '('       shift, and go to state 6

    expr  go to state 11


state 7

    1 program: program statement . '\n'

    '\n'  shift, and go to state 12


state 8

    3 statement: expr .
    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '/'  shift, and go to state 16

    $default  reduce using rule 3 (statement)


state 9

    4 statement: VARIABLE '=' . expr

    INTEGER   shift, and go to state 3
    FLOAT     shift, and go to state 4
    VARIABLE  shift, and go to state 10
    '('       shift, and go to state 6

    expr  go to state 17


state 10

    7 expr: VARIABLE .

    $default  reduce using rule 7 (expr)


state 11

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | '(' expr . ')'

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '/'  shift, and go to state 16
    ')'  shift, and go to state 18


state 12

    1 program: program statement '\n' .

    $default  reduce using rule 1 (program)


state 13

    8 expr: expr '+' . expr

    INTEGER   shift, and go to state 3
    FLOAT     shift, and go to state 4
    VARIABLE  shift, and go to state 10
    '('       shift, and go to state 6

    expr  go to state 19


state 14

    9 expr: expr '-' . expr

    INTEGER   shift, and go to state 3
    FLOAT     shift, and go to state 4
    VARIABLE  shift, and go to state 10
    '('       shift, and go to state 6

    expr  go to state 20


state 15

   10 expr: expr '*' . expr

    INTEGER   shift, and go to state 3
    FLOAT     shift, and go to state 4
    VARIABLE  shift, and go to state 10
    '('       shift, and go to state 6

    expr  go to state 21


state 16

   11 expr: expr '/' . expr

    INTEGER   shift, and go to state 3
    FLOAT     shift, and go to state 4
    VARIABLE  shift, and go to state 10
    '('       shift, and go to state 6

    expr  go to state 22


state 17

    4 statement: VARIABLE '=' expr .
    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '/'  shift, and go to state 16

    $default  reduce using rule 4 (statement)


state 18

   12 expr: '(' expr ')' .

    $default  reduce using rule 12 (expr)


state 19

    8 expr: expr . '+' expr
    8     | expr '+' expr .
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr

    '*'  shift, and go to state 15
    '/'  shift, and go to state 16

    $default  reduce using rule 8 (expr)


state 20

    8 expr: expr . '+' expr
    9     | expr . '-' expr
    9     | expr '-' expr .
   10     | expr . '*' expr
   11     | expr . '/' expr

    '*'  shift, and go to state 15
    '/'  shift, and go to state 16

    $default  reduce using rule 9 (expr)


state 21

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   10     | expr '*' expr .
   11     | expr . '/' expr

    $default  reduce using rule 10 (expr)


state 22

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   11     | expr '/' expr .

    $default  reduce using rule 11 (expr)
